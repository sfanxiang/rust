name: CI

defaults:
  run:
    shell: "python src/ci/exec-with-shell.py {0}"

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  pr:
    name: PR
    env:
      CI_JOB_NAME: "${{ matrix.name }}"
      SCCACHE_BUCKET: rust-lang-gha-caches
      TOOLSTATE_REPO: "https://github.com/pietroalbini/rust-toolstate"
      CACHE_DOMAIN: ci-caches-gha.rust-lang.org
    strategy:
      matrix:
        include:
          - name: mingw-check
            os: ubuntu-latest
            env: {}
          - name: x86_64-gnu-llvm-8
            os: ubuntu-latest
            env: {}
          - name: x86_64-gnu-tools
            env:
              CI_ONLY_WHEN_SUBMODULES_CHANGED: 1
            os: ubuntu-latest
    timeout-minutes: 600
    runs-on: "${{ matrix.os }}"
    steps:
      - name: disable git crlf conversion
        run: git config --global core.autocrlf false
        shell: bash
      - name: checkout the source code
        uses: actions/checkout@v1
        with:
          fetch-depth: 2
      - name: add extra environment variables
        run: src/ci/scripts/setup-environment.sh
        env:
          EXTRA_VARIABLES: "${{ toJson(matrix.env) }}"
        if: success() && !env.SKIP_JOB
      - name: collect CPU statistics
        run: src/ci/scripts/collect-cpu-stats.sh
        if: success() && !env.SKIP_JOB
      - name: show the current environment
        run: src/ci/scripts/dump-environment.sh
        if: success() && !env.SKIP_JOB
      - name: install awscli
        run: src/ci/scripts/install-awscli.sh
        if: success() && !env.SKIP_JOB
      - name: install sccache
        run: src/ci/scripts/install-sccache.sh
        if: success() && !env.SKIP_JOB
      - name: install clang
        run: src/ci/scripts/install-clang.sh
        if: success() && !env.SKIP_JOB
      - name: install WIX
        run: src/ci/scripts/install-wix.sh
        if: success() && !env.SKIP_JOB
      - name: install InnoSetup
        run: src/ci/scripts/install-innosetup.sh
        if: success() && !env.SKIP_JOB
      - name: ensure the build happens on a partition with enough space
        run: src/ci/scripts/symlink-build-dir.sh
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        if: success() && !env.SKIP_JOB
      - name: install MSYS2
        run: src/ci/scripts/install-msys2.sh
        if: success() && !env.SKIP_JOB
      - name: install MinGW
        run: src/ci/scripts/install-mingw.sh
        if: success() && !env.SKIP_JOB
      - name: install ninja
        run: src/ci/scripts/install-ninja.sh
        if: success() && !env.SKIP_JOB
      - name: enable ipv6 on Docker
        run: src/ci/scripts/enable-docker-ipv6.sh
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        if: success() && !env.SKIP_JOB
      - name: checkout submodules
        run: src/ci/scripts/checkout-submodules.sh
        if: success() && !env.SKIP_JOB
      - name: ensure line endings are correct
        run: src/ci/scripts/verify-line-endings.sh
        if: success() && !env.SKIP_JOB
      - name: run the build
        run: src/ci/scripts/run-build-from-ci.sh
